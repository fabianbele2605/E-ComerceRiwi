// app/src/models/product.model.ts

/**
/**
 * Role Model
 * ----------
 * This file defines the Sequelize `Product` model, which represents the `Products` table in the database.
 *
 * 
 * Contains:
 *  - Model attributes (`ProductAttributes`).
 *  - Required attributes for creation (`ProductCreationAttributes`).
 *  - Model definition with its columns and constraints.
 * 
 * This model is used by services and controllers to perform CRUD operations.
 */


import { DataTypes, Model, Optional } from "sequelize";
import sequelize from "../config/database";

/**
 *  Main attributes of the `product` entity.
 */
export interface ProductAttributes {
    id_product: number;
    category_id: number;
    name: string;
    price: number
    description: string;
    stock: number;
    is_active: boolean;
}

/**
 * Attributes used for creating a new Product.
 * `Optional` is used to indicate that `id` is not required at the time
 * of creation, as it is automatically generated by the database.
 */

export interface ProductCreationAttributes extends Optional<ProductAttributes, "id_product"> { }

/**
 * Class that represents the `Product` model in Sequelize.
 * 
 * Implements the attributes defined in `ProductAttributes` and `ProductCreationAttributes`.
 */

class Product extends Model<ProductAttributes, ProductCreationAttributes> implements ProductAttributes {
    /** Unique identifier of the product (primary key). */
    public id_product!: number;
    /** Unique identifier of the category (Foreign key). */
    public category_id!: number;
    /** Name of the product */
    public name!: string;
    /** Name of the product */
    public price!: number;
    /** Name of the product */
    public description!: string;
    /** Name of the product */
    public stock!: number;
    /** Status of the product (active/inactive) */
    public is_active!: boolean;
}

/**
 * Initialization of the `product` model with Sequelize configuration.
 * 
 * - `id`: Auto-incrementing integer, primary key that uniquely identifies each product.
 * - `id_category`: Integer foreign key referencing the category to which the product belongs.
 * - `name`: Name of the product, stored as a string.
 * - `price`: Numeric value representing the price of the product.
 * - `description`: Textual description providing details about the product.
 * - `stock`: Integer indicating the quantity of the product available in inventory.
 * - `is_active`: Boolean flag indicating whether the product is active (available for sale) or inactive.
 */


Product.init(
    {
        id_product: {
            type: DataTypes.INTEGER,
            autoIncrement: true,
            primaryKey: true,
        },
        category_id: {
            type: DataTypes.INTEGER,
            allowNull: false,
            references: {
                model: "categories",
                key: "id_category",
            }
        },
        name: {
            type: DataTypes.STRING(100),
            unique: true,
            allowNull: false,
        },
        price: {
            type: DataTypes.DECIMAL(12, 2),
            allowNull: false,
        },
        description: {
            type: DataTypes.STRING(100),
            unique: true,
            allowNull: false,
        },
        stock: {
            type: DataTypes.INTEGER,
            defaultValue: 0,
        },
        is_active: {
            type: DataTypes.BOOLEAN,
            allowNull: false,
            defaultValue: true,
        }
    },
    {
        sequelize,
        modelName: "Product",      // Name of the model in Sequelize
        tableName: "products",     // Name of the table in the database
        timestamps: true,       // includes createdAt and updatedAt
        createdAt: "created_at",
        updatedAt: "updated_at"
    }
);

export default Product;
