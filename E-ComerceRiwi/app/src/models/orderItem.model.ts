// app/src/models/orderItem.model.ts

/**
/**
 * OrderItem Model
 * ----------
 * This file defines the Sequelize `OrderItem` model, which represents the `order_items` table in the database.
 *
 * 
 * Contains:
 *  - Model attributes (`OrderItemAttributes`).
 *  - Required attributes for creation (`OrderItemCreationAttributes`).
 *  - Model definition with its columns and constraints.
 * 
 * This model is used by services and controllers to perform CRUD operations.
 */


import { DataTypes, Model, Optional } from "sequelize";
import sequelize from "../config/database";

/**
 *  Main attributes of the `OrderItem` entity.
 */
export interface OrderItemAttributes {
    id_order_item: number;
    order_id: number;
    price: number;
    quantity: number;
    subtotal: number;
    is_active: boolean;
}

/**
 * Attributes used for creating a new order_item.
 * `Optional` is used to indicate that `id` is not required at the time
 * of creation, as it is automatically generated by the database.
 */

export interface OrderItemCreationAttributes extends Optional<OrderItemAttributes, "id_order_item"> { }




/**
 * Class that represents the `order_item` model in Sequelize.
 * 
 * Implements the attributes defined in `OrderItemAttributes` and `ProductsCreationAttributes`.
 */

class OrderItem extends Model<OrderItemAttributes, OrderItemCreationAttributes> implements OrderItemAttributes {
    /** Unique identifier of the OrderItem (primary key). */
    public id_order_item!: number;
    /** Unique identifier of the category (Foreign key). */
    public order_id!: number;
    /** Name of the order_item */
    public price!: number;
    /** Name of the order_item */
    public quantity!: number;
    /** Name of the order_item */
    public subtotal!: number;
    /** Status of the order_item (active/inactive) */
    public is_active!: boolean;
}
/**

 * 
 * Properties include:
 * - `id_order_item`: Primary key, unique identifier for each order item.
 * - `order_id`: Foreign key linking to the related order.
 * - `price`: Price of the individual order item.
 * - `quantity`: Number of units ordered for this item.
 * - `description`: Description or details of the order item.
 * - `subtotal`: Calculated subtotal (price * quantity) for this order item.
 * - `is_active`: Boolean flag to indicate if the order item is active or inactive.
 * 
 * This class serves as the blueprint for CRUD operations on order items within the database.
 */


OrderItem.init(
    {
        id_order_item: {
            type: DataTypes.INTEGER,
            autoIncrement: true,
            primaryKey: true,
        },
        order_id: {
            type: DataTypes.INTEGER,
            allowNull: false,
            references: {
                model: "orders",
                key: "id_order",
            }
        },
        price: {
            type: DataTypes.DECIMAL(12, 2),
            allowNull: false,
        },
        quantity: {
            type: DataTypes.INTEGER,
            allowNull: false,
        },
        subtotal: {
            type: DataTypes.DECIMAL(12, 2),
            allowNull: false,
        },
        is_active: {
            type: DataTypes.BOOLEAN,
            allowNull: false,
            defaultValue: true,
        }
    },
    {
        sequelize,
        modelName: "OrderItem",      // Name of the model in Sequelize
        tableName: "order_items",     // Name of the table in the database
        timestamps: true,       // includes createdAt and updatedAt
        createdAt: "created_at",
        updatedAt: "updated_at"
    }
);

export default OrderItem;
