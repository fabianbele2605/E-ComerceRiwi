// app/src/models/PaymentMethod.model.ts

/**
/**
 * Payment_methods Model
 * ----------
 * This file defines the Sequelize `PaymentMethod` model, which represents the `Payment_methods` table in the database.
 *
 * 
 * Contains:
 *  - Model attributes (`PaymentMethodAttributes`).
 *  - Required attributes for creation (`PaymentMethodCreationAttributes`).
 *  - Model definition with its columns and constraints.
 * 
 * This model is used by services and controllers to perform CRUD operations.
 */


import { DataTypes, Model, Optional } from "sequelize";
import sequelize from "../config/database";

/**
 *  Main attributes of the `Payment_methods` entity.
 */
export interface PaymentMethodAttributes {
    id_payment_method: number;
    name: string;
    is_active: boolean;
    createdAt?: Date;
    updatedAt?: Date;
}

/**
 * Attributes used for creating a new Payment_methods.
 * `Optional` is used to indicate that `id` is not required at the time
 * of creation, as it is automatically generated by the database.
 */

export interface PaymentMethodCreationAttributes extends Optional<PaymentMethodAttributes, "id_payment_method"> { }

/**
 * Class that represents the `Payment_methods` model in Sequelize.
 * 
 * Implements the attributes defined in `PaymentMethodAttributes` and `PaymentMethodCreationAttributes`.
 */

class PaymentMethod extends Model<PaymentMethodAttributes, PaymentMethodCreationAttributes> implements PaymentMethodAttributes {
    /** Unique identifier of the Payment_methods(primary key). */

    public id_payment_method!: number;

    /** Name of the Payment_methods */

    public name!: string;

    /** Status of the Payment_methods (active/inactive) */

    public is_active!: boolean;
    
    public createdAt!: Date;
    public updatedAt!: Date;
}

/**
 * Initialization of the `Payment_methods` model with Sequelize configuration.
 * 
 * - `id`: Auto-incrementing integer, primary key.
 * - `name`: Name of the Payment_methods with a maximum of 100 characters.
 * - `is_active`: Boolean to indicate whether the role is active or inactive.
 */

PaymentMethod.init(
    {
        id_payment_method: {
            type: DataTypes.INTEGER,
            autoIncrement: true,
            primaryKey: true,
        },
        name: {
            type: DataTypes.STRING(100),
            unique: true,
            allowNull: false,
        },
        is_active: {
            type: DataTypes.BOOLEAN,
            allowNull: false,
            defaultValue: true,
        }
    },
    {
        sequelize,
        modelName: "PaymentMethod",      // Name of the model in Sequelize
        tableName: "payment_methods",    // Name of the table in the database
        timestamps: true,                // includes createdAt and updatedAt
        createdAt: "created_at",
        updatedAt: "updated_at"
    }
);

export default PaymentMethod;
